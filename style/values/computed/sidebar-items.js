initSidebarItems({"enum":[["ComputedUrl","The computed value of a CSS `url()`, resolved relative to the stylesheet URL."],["NumberOrPercentage",""]],"mod":[["angle","Computed angles."],["background","Computed types for CSS values related to backgrounds."],["basic_shape","CSS handling for the computed value of [`basic-shape`][basic-shape]s"],["border","Computed types for CSS values related to borders."],["box_","Computed types for box properties."],["color","Computed color values."],["effects","Computed types for CSS values related to effects."],["flex","Computed types for CSS values related to flexbox."],["font","Computed values for font properties"],["image","CSS handling for the computed value of [`image`][image]s"],["length","`<length>` computed values, and related ones."],["list","`list` computed values."],["outline","Computed values for outline properties"],["percentage","Computed percentages."],["position","CSS handling for the computed value of [`position`][position] values."],["rect","Computed types for CSS borders."],["svg","Computed types for SVG properties."],["table","Computed types for table properties."],["text","Computed types for text properties."],["time","Computed time values."],["transform","Computed types for CSS values that are related to transformations."],["ui","Computed values for UI properties"]],"struct":[["Au","An App Unit, the fundamental unit of length in Servo. Usually 1/60th of a pixel (see AU_PER_PX)"],["ClipRect","A computed cliprect for clip and image-region"],["ComputedVecIter","An iterator over a slice of computed values"],["Context","A `Context` is all the data a specified value could ever need to compute itself and be transformed to a computed value."]],"trait":[["ToComputedValue","A trait to represent the conversion between computed and specified values."]],"type":[["ClipRectOrAuto","rect(...) | auto"],["ColorOrAuto"," | auto"],["GreaterThanOrEqualToOneNumber","A wrapper of Number, but the value >= 1."],["GridLine","The computed value of a `<grid-line>`."],["GridTemplateComponent","`<grid-template-rows> | <grid-template-columns>`"],["Integer","A `<integer>` value."],["IntegerOrAuto"," | auto"],["LengthOrPercentageOrNumber"," |  | "],["NonNegativeLengthOrPercentageOrNumber","NonNegativeLengthOrPercentage | NonNegativeNumber"],["NonNegativeNumber","A wrapper of Number, but the value >= 0."],["Number","A `<number>` value."],["Opacity","A type used for opacity."],["PositiveInteger","A wrapper of Integer, but only accept a value >= 1."],["PositiveIntegerOrAuto","PositiveInteger | auto"],["TrackBreadth","The computed value of a grid `<track-breadth>`"],["TrackList","The computed value of a grid `<track-list>` (could also be `<auto-track-list>` or `<explicit-track-list>`)"],["TrackSize","The computed value of a grid `<track-size>`"],["UrlOrNone"," | "]]});
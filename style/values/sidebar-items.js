initSidebarItems({"enum":[["Either","A struct representing one of two kinds of values."],["ExtremumLength",""],["Impossible","Convenience void type to disable some properties and values through types."],["KeyframesName","https://drafts.csswg.org/css-animations/#typedef-keyframes-name"],["Token","One of the pieces the CSS input is broken into."]],"fn":[["serialize_identifier","Write a CSS identifier, escaping characters as necessary."],["serialize_percentage","Serialize a normalized value into percentage."]],"mod":[["animated","Animated values."],["computed","Computed values."],["distance","Machinery to compute distances between animatable values."],["generics","Generic types that share their serialization implementations for both specified and computed values."],["specified","Specified values."]],"struct":[["Auto",""],["CowRcStr","A string that is either shared (heap-allocated and reference-counted) or borrowed."],["CustomIdent","https://drafts.csswg.org/css-values-4/#custom-idents"],["None_",""],["Normal",""],["Parser","A CSS parser that borrows its `&str` input, yields `Token`s, and keeps track of nested blocks and functions."],["RGBA","A color with red, green, blue, and alpha components, in a byte each."],["SourceLocation","The line and column number for a given position within the input."]],"type":[["CSSFloat","A CSS float value."],["CSSInteger","A CSS integer value."]]});
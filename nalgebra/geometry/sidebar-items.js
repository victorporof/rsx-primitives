initSidebarItems({"enum":[["TAffine","Tag representing an affine `Transform`. Its bottom-row is equal to `(0, 0 ... 0, 1)`."],["TGeneral","Tag representing the most general (not necessarily inversible) `Transform` type."],["TProjective","Tag representing the most general inversible `Transform` type."]],"struct":[["IsometryBase","A direct isometry, i.e., a rotation followed by a translation."],["OrthographicBase","A 3D orthographic projection stored as an homogeneous 4x4 matrix."],["PerspectiveBase","A 3D perspective projection stored as an homogeneous 4x4 matrix."],["PointBase","A point in a n-dimensional euclidean space."],["QuaternionBase","A quaternion. See the type alias `UnitQuaternionBase = Unit<QuaternionBase>` for a quaternion that may be used as a rotation."],["RotationBase","A rotation matrix."],["SimilarityBase","A similarity, i.e., an uniform scaling, followed by a rotation, followed by a translation."],["TransformBase","A transformation matrix in homogeneous coordinates."],["TranslationBase","A translation."]],"trait":[["SubTCategoryOf","Indicates that `Self` is a more specific `Transform` category than `Other`."],["SuperTCategoryOf","Indicates that `Self` is a more general `Transform` category than `Other`."],["TCategory","Trait implemented by phantom types identifying the projective transformation type."],["TCategoryMul","Traits that gives the `Transform` category that is compatible with the result of the multiplication of transformations with categories `Self` and `Other`."]],"type":[["Affine","A `D`-dimensional affine transformation. Stored as an homogeneous `(D + 1) × (D + 1)` matrix."],["Affine2","A 2D affine transformation. Stored as an homogeneous 3x3 matrix."],["Affine3","A 3D affine transformation. Stored as an homogeneous 4x4 matrix."],["Isometry","A D-dimensional isometry."],["Isometry2","A 2-dimensional isometry using a unit complex number for its rotational part."],["Isometry3","A 3-dimensional isometry using a unit quaternion for its rotational part."],["IsometryMatrix2","A 2-dimensional isometry using a rotation matrix for its rotation part."],["IsometryMatrix3","A 3-dimensional isometry using a rotation matrix for its rotation part."],["Orthographic3","A 3D orthographic projection stored as a static homogeneous 4x4 matrix."],["OwnedIsometryBase","An isometry that uses a data storage deduced from the allocator `A`."],["OwnedPoint","A point with an owned storage."],["OwnedQuaternionBase","A quaternion with an owned storage allocated by `A`."],["OwnedRotation","A rotation matrix with an owned storage."],["OwnedSimilarityBase","A similarity that uses a data storage deduced from the allocator `A`."],["OwnedTransform","A transformation matrix that owns its data."],["OwnedTranslation","A translation with an owned vector storage."],["OwnedUnitQuaternionBase","A unit quaternion with an owned storage allocated by `A`."],["Perspective3","A 3D perspective projection stored as a static homogeneous 4x4 matrix."],["Point","A statically sized D-dimensional column point."],["Point1","A statically sized 1-dimensional column point."],["Point2","A statically sized 2-dimensional column point."],["Point3","A statically sized 3-dimensional column point."],["Point4","A statically sized 4-dimensional column point."],["Point5","A statically sized 5-dimensional column point."],["Point6","A statically sized 6-dimensional column point."],["PointMul","The type of the result of the multiplication of a point by a matrix."],["PointSum","The type of the result of the sum of a point with a vector."],["Projective","An inversible `D`-dimensional general transformation. Stored as an homogeneous `(D + 1) × (D + 1)` matrix."],["Projective2","An inversible 2D general transformation. Stored as an homogeneous 3x3 matrix."],["Projective3","An inversible 3D general transformation. Stored as an homogeneous 4x4 matrix."],["Quaternion","A statically-allocated quaternion."],["Rotation","A D-dimensional rotation matrix."],["Rotation2","A 2-dimensional rotation matrix."],["Rotation3","A 3-dimensional rotation matrix."],["Similarity","A D-dimensional similarity."],["Similarity2","A 2-dimensional similarity."],["Similarity3","A 3-dimensional similarity."],["SimilarityMatrix2","A 2-dimensional similarity using a rotation matrix for its rotation part."],["SimilarityMatrix3","A 3-dimensional similarity using a rotation matrix for its rotation part."],["Transform","A `D`-dimensional general transformation that may not be inversible. Stored as an homogeneous `(D + 1) × (D + 1)` matrix."],["Transform2","A 2D general transformation that may not be inversible. Stored as an homogeneous 3x3 matrix."],["Transform3","A 3D general transformation that may not be inversible. Stored as an homogeneous 4x4 matrix."],["Translation","A D-dimensional translation."],["Translation2","A 2-dimensional translation."],["Translation3","A 3-dimensional translation."],["UnitComplex","A complex number with a norm equal to 1."],["UnitQuaternion","A statically-allocated unit quaternion."],["UnitQuaternionBase","A unit quaternions. May be used to represent a rotation."]]});
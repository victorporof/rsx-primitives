initSidebarItems({"enum":[["DefaultApprox","The \"default\" approximation scheme.  This scheme does whatever would generally be expected of a lossy conversion, assuming no additional context or instruction is given."],["RoundToNearest","This scheme is used to convert a value by rounding it to the nearest representable value, with ties rounding away from zero."],["RoundToNegInf","This scheme is used to convert a value by rounding it toward negative infinity to the nearest representable value."],["RoundToPosInf","This scheme is used to convert a value by rounding it toward positive infinity to the nearest representable value."],["RoundToZero","This scheme is used to convert a value by rounding it toward zero to the nearest representable value."],["Wrapping","This scheme is used to convert a value by \"wrapping\" it into a narrower range."]],"macro":[["TryFrom","See the documentation for the `macros` module for details."]],"mod":[["errors","This module defines the various error types that can be produced by a failed conversion."],["macros","This module provides convenience macros to help with implementing the conversion traits."],["misc","This module defines some additional traits not directly tied to conversions."],["prelude","Publicly re-exports the most generally useful set of items."]],"trait":[["ApproxFrom","This trait is used to perform a conversion that is permitted to approximate the result, but not to wrap or saturate the result to fit into the destination type's representable range."],["ApproxInto","This is the dual of `ApproxFrom`; see that trait for information."],["ApproxScheme","This trait is used to mark approximation scheme types."],["ConvAsUtil","This extension trait exists to simplify using various conversions."],["ConvUtil","This extension trait exists to simplify using various conversions."],["TryFrom","This trait is used to perform a conversion between different semantic types which might fail."],["TryInto","This is the dual of `TryFrom`; see that trait for information."],["ValueFrom","This trait is used to perform an exact, value-preserving conversion."],["ValueInto","This is the dual of `ValueFrom`; see that trait for information."]]});